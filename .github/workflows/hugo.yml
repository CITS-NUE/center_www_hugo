name: Deploy Hugo site to nue-its-web

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["*"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

# Default to bash
defaults:
  run:
    shell: bash

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    env:
      HUGO_VERSION: 0.120.4
    steps:
      - name: Install Hugo CLI
        run: |
          wget -O ${{ runner.temp }}/hugo.deb https://github.com/gohugoio/hugo/releases/download/v${HUGO_VERSION}/hugo_extended_${HUGO_VERSION}_linux-amd64.deb \
          && sudo dpkg -i ${{ runner.temp }}/hugo.deb
      - name: Install Dart Sass
        run: sudo snap install dart-sass
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v4
      - name: Build with Hugo
        env:
          # For maximum backward compatibility with Hugo modules
          HUGO_ENVIRONMENT: production
          HUGO_ENV: production
        run: |
          hugo \
            --minify \
            --baseURL "${{ steps.pages.outputs.base_url }}/"
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v2
        with:
          name: public
          path: ./public

  # Deployment job
  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment: "deploy to nue-its-web"
    steps:
      - name: Setup SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          echo "${{ secrets.WEB_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          echo "Host ssh-server" >> ~/.ssh/config
          echo "  HostName ${{ vars.SSH_HOST }}" >> ~/.ssh/config
          echo "  User ${{ vars.SSH_USER }}" >> ~/.ssh/config
          echo "  IdentityFile ~/.ssh/id_rsa" >> ~/.ssh/config
          echo "  DynamicForward 10080" >> ~/.ssh/config
          echo "Host web-server" >> ~/.ssh/config
          echo "  HostName ${{ vars.WEB_HOST }}" >> ~/.ssh/config
          echo "  User ${{ vars.WEB_USER }}" >> ~/.ssh/config
          echo "  ProxyJump ssh-server" >> ~/.ssh/config
          ssh-keyscan -H ${{ vars.SSH_HOST }} >> ~/.ssh/known_hosts
          ssh-keyscan -H ${{ vars.WEB_HOST }} >> ~/.ssh/known_hosts
          chmod 600 ~/.ssh/known_hosts
      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: public
          path: ./public
      - name: Deploy to web-server
        run: |
          rsync -avz --delete -e "ssh -o StrictHostKeyChecking=no" ./public/ web-server:/var/www/nue-its-web
